@using LiGather.Model.WebDomain
@using LiGather.Web.App_Code
@using Timer = LiGather.Util.Timer
@model List<TaskEntity>

@{
    Layout = null;
}

<!DOCTYPE>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>任务列表</title>
    <link href="~/Content/bootstrap/css/bootstrap.css" rel="stylesheet" type="text/css" />
    <script src="~/Content/bootstrap/js/jquery-1.11.3.js"></script>
    <script src="~/Content/layer/layer.js"></script>
    <script src="~/Content/bootstrap/js/bootstrap.js" type="text/javascript"></script>
</head>
<body>
    <div class="container">
        <br />
        <div class="row">
            <div class="col-lg-12">
                <form class="bs-example bs-example-form" role="form">
                    <div class="input-group">
                        <input type="text" class="form-control">
                        <span class="input-group-btn">
                            <button class="btn btn-primary" type="button">
                                查  询
                            </button>
                        </span>
                    </div>
                </form>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="alert alert-warning fade in">
                    <a href="#" class="close" data-dismiss="alert">
                        &times;
                    </a>
                    <strong>说明：</strong>这里展现的是正在进行或者已经完成的所有爬虫任务。
                </div>

                <p>
                    <button type="button" class="btn btn-primary" onclick="openNew()">
                        创建新任务
                    </button>
                </p>
                <div class="table-responsive">
                    <table class="table table-hover table-striped table-bordered">
                        <thead>
                            <tr class="active">
                                <td class="text-center">
                                    任务名称
                                </td>
                                <td class="text-center">
                                    总任务数
                                </td>
                                <td class="text-center" style="width: 400px;">
                                    任务进度
                                </td>
                                @*<td class="text-center">
                                        已运行
                                    </td>*@
                                <td class="text-center">
                                    任务创建人
                                </td>
                                <td class="text-center">
                                    创建时间
                                </td>
                                <td class="text-center">
                                    任务状态
                                </td>
                                <td style="width: 0;"></td>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var taskEntity in Model)
                            {
                                <tr>
                                    <td>
                                        <span class="glyphicon glyphicon-tag"></span>
                                        @taskEntity.TaskName
                                    </td>
                                    <td class="text-right">
                                        @taskEntity.TaskNum
                                    </td>
                                    <td>
                                        <div class="progress progress-striped active" style="margin-bottom: 0;">
                                            <div style="width: 1%;" class="progress-bar @taskEntity.Unique">
                                                <strong>1%</strong>
                                            </div>
                                        </div>
                                    </td>
                                    @*<td class="text-right">
                                            @if (taskEntity.EndTime == null)
                                            {
                                                @Timer.DateDiff(DateTime.Now, taskEntity.CreateTime);
                                            }
                                            else
                                            {
                                                @Timer.DateDiff((DateTime)taskEntity.EndTime, taskEntity.CreateTime)
                                            }
                                        </td>*@
                                    <td class="text-right">
                                        @taskEntity.OperatorName
                                    </td>
                                    <td class="text-right">
                                        @taskEntity.CreateTime.ToString("yyyy年MM月dd日 hh时mm分ss秒")
                                    </td>
                                    <td class="text-center" id="@taskEntity.Unique">
                                        @Html.LabelForState(taskEntity.TaskStateDic.TaskStateName, taskEntity.TaskStateDic.LabelClass)
                                    </td>
                                    <td>
                                        <script type="text/javascript">
                                            (function ($) {
                                                var $task = $('div.@taskEntity.Unique');
                                                function checkInsert() {
                                                    var i = 0;
                                                    var insertInterval = setInterval(function () {
                                                        if (i == parseInt('@taskEntity.TaskNum')) {
                                                            goGather();
                                                            window.clearInterval(insertInterval);
                                                        }
                                                        $.post('@Url.Action("CheckInsertMetadata")', { Unique: '@taskEntity.Unique' }, function (data) {
                                                            i = data.num;
                                                            var percentage = Percentage(data.num, parseInt('@taskEntity.TaskNum'));
                                                            $task.css('width', percentage + "%");
                                                            $task.find("strong").text(percentage + "%");
                                                        });
                                                    }, 1000);
                                                };

                                                var $labelSpan = $('td#@taskEntity.Unique span');
                                                function goGather() {
                                                    $.post('@Url.Action("GoGather")', { OperatorName: '@taskEntity.OperatorName', Unique: '@taskEntity.Unique' }, function (data) {
                                                        $labelSpan.attr('class', 'label label-warning').text('数据抓取中');
                                                        //启动监听
                                                        checkGather();
                                                    });
                                                };

                                                function checkGather() {
                                                    var i;
                                                    var gatherInterval = setInterval(function () {
                                                        if (i == parseInt('@taskEntity.TaskNum')) {
                                                            var $a = $('<a href=\'@Url.Action("Export")/unique=@taskEntity.Unique\'></a>');
                                                            $a.append($labelSpan.attr('class', 'label label-success').text('采集完成/下载'));
                                                            $('td#@taskEntity.Unique').html('').append($a);
                                                            window.clearInterval(gatherInterval);
                                                        }
                                                        $.post('@Url.Action("CheckGoGather")', { Unique: '@taskEntity.Unique' }, function (data) {
                                                            i = data.num;
                                                            var percentage = Percentage(data.num, parseInt('@taskEntity.TaskNum'));
                                                            $task.css('width', percentage + "%");
                                                            $task.find("strong").text(percentage + "%");
                                                        });
                                                    }, 1000);
                                                };

                                                @if (taskEntity.TaskStateDicId == 1)
                                                {
                                                    @:checkInsert();
                                                }
                                                @if (taskEntity.TaskStateDicId == 2)
                                                {
                                                    @:checkGather();
                                                }
                                            })(jQuery);
                                        </script>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        var openNew = function () {
            layer.open({
                type: 2,
                title: '创建新任务',
                shadeClose: false,
                maxmin: true,
                shade: 0.7,
                area: ['480px', '350px'],
                content: '@Url.Action("CreateTask")'
            });
        };

        function Percentage(num, total) {
            return (Math.round(num / total * 10000) / 100.00);
        }
    </script>
</body>
</html>
